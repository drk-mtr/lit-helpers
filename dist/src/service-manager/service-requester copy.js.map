{"version":3,"file":"service-requester copy.js","sourceRoot":"","sources":["../../../src/service-manager/service-requester copy.ts"],"names":[],"mappings":"AAOA,MAAM,CAAC,MAAM,gBAAgB,GAAG,CAAoC,UAAa,EAAE,EAAE;IACnF,MAAM,cAAe,SAAQ,UAAU;QACrC,eAAe,CAAC,GAAQ;YACtB,MAAM,KAAK,GAAG,IAAI,WAAW,CAAC,kBAAkB,EAAE;gBAChD,MAAM,EAAE,EAAE,GAAG,EAAE;gBACf,OAAO,EAAE,IAAI;gBACb,UAAU,EAAE,IAAI;gBAChB,QAAQ,EAAE,IAAI;aACf,CAAC,CAAC;YAEH,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;YAE1B,OAAQ,KAAqB,CAAC,MAAM,CAAC,QAAQ,CAAC;QAChD,CAAC;KACF;IAAA,CAAC;IAEF,OAAO,cAA4D,CAAC;AACtE,CAAC,CAAA","sourcesContent":["import { LitElement } from \"lit\";\nimport { Constructor } from \"./constructor\";\n\nexport interface ServiceRequesterInterface {\n  requestInstance: (key: any) => any;\n} \n\nexport const ServiceRequester = <T extends Constructor<LitElement>>(superClass: T) => {\n  class RequesterClass extends superClass {\n    requestInstance(key: any) {\n      const event = new CustomEvent('request-instance', {\n        detail: { key },\n        bubbles: true,\n        cancelable: true,\n        composed: true\n      });\n      \n      this.dispatchEvent(event);\n\n      return (event as CustomEvent).detail.instance;\n    }\n  };\n  \n  return RequesterClass as Constructor<ServiceRequesterInterface> & T;\n}"]}