{"version":3,"file":"service-requester.js","sourceRoot":"","sources":["../../../src/service-manager/service-requester.ts"],"names":[],"mappings":"AAIA,MAAM,CAAC,MAAM,gBAAgB,GAAG,CAAoC,UAAa,EAAE,EAAE;IACnF,MAAM,cAAe,SAAQ,UAAU;QACrC,kBAAkB,CAAC,GAAQ;;YACzB,MAAM,KAAK,GAAG,IAAI,WAAW,CAAC,aAAa,EAAE;gBAC3C,MAAM,EAAE,EAAE,GAAG,EAAE;gBACf,OAAO,EAAE,IAAI;gBACb,UAAU,EAAE,IAAI;gBAChB,QAAQ,EAAE,IAAI;aACf,CAAC,CAAC;YAEH,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;YAE1B,MAAM,WAAW,GAAG,KAAoB,CAAC;YAEzC,OAAO,MAAA,WAAW,CAAC,MAAM,CAAC,QAAQ,mCAAI,IAAI,CAAC;QAC7C,CAAC;KACF;IAAA,CAAC;IAEF,OAAO,cAAoD,CAAC;AAC9D,CAAC,CAAA","sourcesContent":["import { LitElement } from \"lit\";\nimport { Constructor } from \"./constructor\";\nimport { IServiceRequester } from \"./service-requester.interface\";\n\nexport const ServiceRequester = <T extends Constructor<LitElement>>(superClass: T) => {\n  class RequesterClass extends superClass {\n    getServiceInstance(key: any) {\n      const event = new CustomEvent('get-service', {\n        detail: { key },\n        bubbles: true,\n        cancelable: true,\n        composed: true\n      });\n      \n      this.dispatchEvent(event);\n\n      const customEvent = event as CustomEvent;\n\n      return customEvent.detail.instance ?? null;\n    }\n  };\n  \n  return RequesterClass as Constructor<IServiceRequester> & T;\n}"]}